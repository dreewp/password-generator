{"version":3,"sources":["utils/generatePassword.js","utils/copyToClipboard.js","components/PasswordGenerator.js","App.js","index.js"],"names":["CharGenerator","uppercase","String","fromCharCode","Math","floor","random","lowercase","numbers","symbols","length","generatePassword","conditions","conditionsArr","Object","keys","filter","condition","password","idx","conditionsLeft","Set","size","randomCondition","delete","join","copyToClipboard","str","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","initialCheckState","checkStateReducer","state","action","name","checked","PasswordGenerator","useState","setLength","setPassword","useReducer","checkStates","dispatchCheckStates","handleCheck","e","target","copied","setCopied","generateAndSetPassword","a","setTimeout","strengthClass","id","className","onSubmit","preventDefault","disabled","icon","faCheck","faClipboard","title","onClick","type","min","max","step","onChange","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57b4def4.chunk.js","sourcesContent":["const generateUppercase = () => {\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\n};\nconst generateLowercase = () => {\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\n};\nconst generateNumber = () => {\n  return String.fromCharCode(Math.floor(Math.random() * 10) + 48);\n};\nconst generateSymbol = () => {\n  const symbols = '!@#$%^&*(){}[]=<>/,.';\n  return symbols[Math.floor(Math.random() * symbols.length)];\n};\nconst CharGenerator = {\n  uppercase: generateUppercase,\n  lowercase: generateLowercase,\n  numbers: generateNumber,\n  symbols: generateSymbol,\n};\n\nconst generatePassword = (length, conditions) => {\n  const conditionsArr = Object.keys(conditions).filter(\n    (condition) => conditions[condition] === true\n  );\n\n  // while not all conditions are met and length is not full\n  const password = [];\n  let idx = 0;\n  const conditionsLeft = new Set(conditionsArr);\n  while (idx < length || conditionsLeft.size > 0) {\n    const randomCondition =\n      conditionsArr[Math.floor(Math.random() * conditionsArr.length)];\n    password[idx % length] = CharGenerator[randomCondition]();\n\n    idx++;\n    conditionsLeft.delete(randomCondition);\n  }\n\n  return password.join('');\n};\n\nexport default generatePassword;\n","const copyToClipboard = function (str) {\n  const el = document.createElement('textarea');\n  el.value = str;\n  el.setAttribute('readonly', '');\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n};\n\nexport default copyToClipboard;\n","import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport '../styles/PasswordGenerator.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport generatePassword from '../utils/generatePassword';\nimport copyToClipboard from '../utils/copyToClipboard';\n\nconst initialCheckState = {\n  uppercase: true,\n  lowercase: true,\n  numbers: true,\n  symbols: true,\n};\nconst checkStateReducer = (state, action) => {\n  return {\n    ...state,\n    [action.name]: action.checked,\n  };\n};\n\nconst DEFAULT_LENGTH = 14;\n\nconst PasswordGenerator = () => {\n  const [length, setLength] = useState(DEFAULT_LENGTH);\n  const [password, setPassword] = useState(\n    generatePassword(DEFAULT_LENGTH, initialCheckState)\n  );\n  const [checkStates, dispatchCheckStates] = useReducer(\n    checkStateReducer,\n    initialCheckState\n  );\n  const handleCheck = (e) => {\n    const { name, checked } = e.target;\n    dispatchCheckStates({ name, checked });\n  };\n\n  // when copying password to clipboard\n  const [copied, setCopied] = useState(false);\n  const onCopy = () => {\n    copyToClipboard(password);\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 500);\n  };\n\n  const generateAndSetPassword = async (length, idx = 20) => {\n    if (idx < 0) return;\n    const password = generatePassword(length, checkStates);\n    await setTimeout(() => setPassword(password), 10);\n    generateAndSetPassword(length, idx - 1);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    generateAndSetPassword(length);\n  };\n  const onLengthChange = (e) => {\n    const length = e.target.value;\n    setLength(length);\n    generateAndSetPassword(length);\n  };\n\n  const getStrength = () => {\n    if (length <= 8) return 'weak';\n    else if (length <= 10) return 'medium';\n    else return 'strong';\n  };\n  const strengthClass = getStrength();\n\n  return (\n    <form\n      id=\"password-generator-form\"\n      className={strengthClass}\n      onSubmit={onSubmit}\n    >\n      <h1>Password Generator</h1>\n      <div id=\"password-container\">\n        <input\n          id=\"password\"\n          className={strengthClass}\n          value={password}\n          disabled\n        />\n        {copied ? (\n          <FontAwesomeIcon id=\"check-icon\" icon={faCheck} size=\"lg\" />\n        ) : (\n          <FontAwesomeIcon\n            id=\"clipboard-icon\"\n            icon={faClipboard}\n            size=\"lg\"\n            title=\"Copy to Clipboard!\"\n            onClick={onCopy}\n          />\n        )}\n      </div>\n      <span id=\"strength\">Strength ({strengthClass})</span>\n      <br />\n      <label>Length ({length})</label>\n      <input\n        type=\"range\"\n        min={1}\n        max={40}\n        step={1}\n        value={length}\n        onChange={onLengthChange}\n      />\n      <label>\n        <input\n          type=\"checkbox\"\n          name=\"uppercase\"\n          checked={checkStates.uppercase}\n          onChange={handleCheck}\n        />\n        Include uppercase letters\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          name=\"lowercase\"\n          checked={checkStates.lowercase}\n          onChange={handleCheck}\n        />\n        Include lowercase letters\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          name=\"numbers\"\n          checked={checkStates.numbers}\n          onChange={handleCheck}\n        />\n        Include numbers\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          name=\"symbols\"\n          checked={checkStates.symbols}\n          onChange={handleCheck}\n        />\n        Include symbols (ex. !@#$)\n      </label>\n      <br />\n      <button id=\"generate-btn\" type=\"submit\">\n        Generate\n      </button>\n    </form>\n  );\n};\n\nexport default PasswordGenerator;\n","import React from 'react';\nimport './App.scss';\nimport PasswordGenerator from './components/PasswordGenerator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PasswordGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}